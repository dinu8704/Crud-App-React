{"version":3,"sources":["firebase.js","FirebaseCrud.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","FirebaseCrud","useState","aFirstName","setAFirstName","aLastName","setALastName","userData","setUserData","uFirstName","setuFirstName","uLastName","setuLastName","userId","setUserId","useEffect","database","ref","on","response","data","val","userInfo","id","push","FirstName","LastName","className","autoComplete","onSubmit","e","preventDefault","firestore","console","log","swal","placeholder","value","onChange","target","required","type","alert","child","update","length","map","index","onClick","handleUpdateClick","remove","handleDelete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da38c9fc.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n \r\n const firebaseConfig = {\r\n  apiKey: \"AIzaSyCDjxUkRf6jeC0IJjc-sznz20Y8ywvGE0I\",\r\n  authDomain: \"reactcrud-d5986.firebaseapp.com\",\r\n  databaseURL: \"https://reactcrud-d5986-default-rtdb.firebaseio.com\",\r\n  projectId: \"reactcrud-d5986\",\r\n  storageBucket: \"reactcrud-d5986.appspot.com\",\r\n  messagingSenderId: \"735564893230\",\r\n  appId: \"1:735564893230:web:b5f8bc63e091d22be323bf\" \r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\n export default firebase;\r\n\r\n// var db = firebaseApp.firestore();\r\n// export { db };","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./firebase\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst FirebaseCrud = () => {\r\n\r\n    const [aFirstName, setAFirstName] = useState(\"\");\r\n    const [aLastName, setALastName] = useState(\"\");\r\n    const [userData, setUserData] = useState([]);\r\n    const [uFirstName, setuFirstName] = useState(\"\");\r\n    const [uLastName, setuLastName] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    // for fetching the data \r\n    useEffect(() => {\r\n        const firestore = firebase.database().ref(\"/UserInfo\");\r\n        firestore.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let userInfo = [];\r\n            for(let id in data){\r\n                userInfo.push({\r\n                    id: id,\r\n                    FirstName: data[id].FirstName,\r\n                    LastName: data[id].LastName,\r\n                });\r\n            }\r\n            setUserData(userInfo);\r\n        });\r\n    }, []);\r\n\r\n\r\n    // sending data to firebase \r\n    const handleAddUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        const firestore = firebase.database().ref(\"/UserInfo\");\r\n        console.log(firestore);\r\n        let data = {\r\n            FirstName: aFirstName,\r\n            LastName: aLastName,\r\n        };\r\n        if(data){\r\n            // alert(\"success \" + aFirstName + \" \" + aLastName );\r\n            swal(\"Sumited!\", \"Successfully submited data!\", \"success\");\r\n        }else{\r\n            swal(\"Oops!\", \"Something went wrong!\", \"error\");\r\n        }\r\n        firestore.push(data);\r\n        setAFirstName(\"\");\r\n        setALastName(\"\");\r\n    };\r\n\r\n    // update the value from firebase \r\n    const handleUpdateUser = (e) => {\r\n        e.preventDefault();\r\n        if(uFirstName == '' && uLastName == ''){\r\n            alert(\"You not select any value for updating.!\");\r\n        }else{\r\n            const firestore = firebase.database().ref(\"/UserInfo\").child(userId);\r\n            firestore.update({\r\n                FirstName: uFirstName,\r\n                LastName: uLastName,\r\n            });\r\n            setuFirstName(\"\");\r\n            setuLastName(\"\");\r\n        }\r\n    };\r\n\r\n    // When data fetching in list update button fire and show values in edit form \r\n    const handleUpdateClick = (data) =>{\r\n            setuFirstName(data.FirstName);\r\n            setuLastName(data.LastName);\r\n            setUserId(data.id);\r\n    };\r\n\r\n    // delete the value from firebase \r\n    const handleDelete = (id) =>{\r\n        const firestore = firebase.database().ref(\"/UserInfo\").child(id);\r\n        firestore.remove();\r\n        if(firestore){\r\n            alert(\"Data delete successfully...\");\r\n        }\r\n    };\r\n\r\n    return ( \r\n    <>\r\n    <div className=\"jumbotron\">\r\n        <div className=\"container text-center\">\r\n            <div><h1>ReactJS Crud Operation With Firebase</h1></div>\r\n        </div>\r\n    </div>\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-lg-6\">\r\n                <div className=\"text-center\"><h3>Add User </h3></div>\r\n                <form autoComplete=\"off\" onSubmit={handleAddUser}>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">#</span>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"Username\"  value={aFirstName}\r\n                         onChange={(e) => setAFirstName(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">@</span>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"email\"  value={aLastName} \r\n                        onChange={(e) => setALastName(e.target.value)} required />\r\n                    </div> \r\n                    <div className=\"mx-4\">\r\n                        <button className=\"btn btn-primary btn-block\" type=\"submit\" >Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-6\">\r\n            <div className=\"text-center\"><h3>Edit User </h3></div>\r\n            <form autoComplete=\"off\" onSubmit={handleUpdateUser}>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">#</span>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"Username\"  value={uFirstName}\r\n                         onChange={(e) => setuFirstName(e.target.value)} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">@</span>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"email\"  value={uLastName} \r\n                        onChange={(e) => setuLastName(e.target.value)} required/>\r\n                    </div> \r\n                    <div className=\"mx-4\">\r\n                        <button className=\"btn btn-primary btn-block\" type=\"submit\" >Update</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <br/>\r\n        {userData.length == 0  ? (\r\n            <h3 className=\"text-center\">Ooops! There is no data in database. </h3>\r\n        ) : (\r\n            <div >\r\n                <table className=\"table table-dark table-striped table-bordered\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th> FirstName</th>\r\n                        <th>LastName</th>\r\n                        <th>Operation</th>\r\n                    </tr>\r\n                    </thead> \r\n                    <tbody>\r\n                        {\r\n                            userData.map((data,index) => {\r\n                                return (\r\n                                <>\r\n                                <tr>\r\n                                    <td>{data.FirstName}</td>\r\n                                    <td>{data.LastName}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <button className=\"btn btn-primary mr-2\" onClick={()=>{handleUpdateClick(data)}} >Update</button>\r\n                                        <button className=\"btn btn-danger ml-2\" onClick={()=>{handleDelete(data.id)}}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                                </>\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )}\r\n    </div>\r\n\r\n    </>\r\n    )\r\n};\r\n\r\nexport default FirebaseCrud;","import './App.css';\nimport FirebaseCrud from './FirebaseCrud';\n// import Contacts from './components/Contacts';\n\nfunction App() {\n  return (\n    <>\n        <div>\n          <FirebaseCrud />\n          {/* <Contacts /> */}\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}